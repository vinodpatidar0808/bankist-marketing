'use strict';

// an event is basically a signal generated by a dom node, and signal means that something has happened on page
// whether you listen for event or not but it still happens
const h1 = document.querySelector('h1');
// mouseenter is a hover event in css
// h1.addEventListener('mouseenter', e => {    alert('addEventListener: Great you are reading Heading');
// });

// another way of attaching event : onEventName like onclick, onmouseenter , onevent property exist for all events [on mdn : event reference]
// old school this days : addEventListener
// h1.onmouseenter = e => {
//     alert('onmouseenter : great');
// };

/**
 * why addEventListener is better:
 * it allows us to add multiple event listener for same events, onEvent property get overridden by same event;
 * it allows us to remove events in case we don't need them later
 * */

// for removing events you have to export out the event handler function first
const alerth1 = e => {
    alert('addEventListener: Great you are reading Heading');
    // you don't need to place it here, you can place it anywhere in your code like timer or anywhere, by placing here we can remove event immediately after it gets executed first time
    h1.removeEventListener('mouseenter', alerth1);
};
// now this will work only once : because we removed the event after first execution
h1.addEventListener('mouseenter', alerth1);
// time out
setTimeout(()=>h1.removeEventListener('mouseleave',alerth1),3000)

// you can define events as html attribute : as inline events : but avoid it as it is old school
